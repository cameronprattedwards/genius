var genius = {}; !function () { !function () { genius.utils = { cascadingGet: function (t, e) { for (var n = 0; n < e.length; n++) if (e[n] && e[n].hasOwnProperty(t)) { var i = e[n][t]; return !genius.utils.isNullOrUndefined(i) && i.isAccessor ? i() : i } }, cases: { camelObject: function (t) { var e = {}; for (var n in t) { var i = t[n]; e[genius.utils.cases.pascalToCamel(n)] = "object" == typeof i ? genius.utils.cases.camelObject(i) : i } return e }, isCapitalized: function (t) { return /[A-Z]/.test(t.charAt(0)) }, pascalToCamel: function (t) { return t.charAt(0).toLowerCase() + t.substr(1) } }, trim: function (t) { return t.replace(/^\s+/, "").replace(/\s+$/, "") }, except: function (t, e) { var n = {}; for (var i in t) genius.utils.contains(e, i) || (n[i] = t[i]); return n }, random: function (t, e) { return Math.random() * (e - t) + t }, map: function (t, e) { for (var n = [], i = 0; i < t.length; i++) n[i] = e.call(this, t[i]); return n }, isNullOrUndefined: function (t) { return "undefined" == typeof t || "object" == typeof t && !t }, trace: function (t) { for (var e = arguments.callee.caller, n = 0; t > n; n++) e = e.arguments.callee.caller; console.log(e.toString()) }, partial: function (t) { return function () { return t.apply(this, genius.utils.toArray(arguments).slice(1)) } }, toArray: function (t) { for (var e = [], n = 0; n < t.length; n++) e.push(t[n]); return e }, accessor: function (t) { var e = function () { return arguments.length && (t = arguments[0]), t }; return e.isAccessor = !0, e }, extend: function (t, e) { for (var n in e) t[n] = e[n]; return t }, contains: function (t, e) { return -1 !== genius.utils.indexOf(t, e) }, indexOf: function (t, e) { if (Array.prototype.indexOf) return Array.prototype.indexOf.call(t, e); for (var n = 0; n < t.length; n++) if (t[n] === e) return n; return -1 }, once: function (t) { var e, n = !1, i = function () { return n || (n = !0, e = t.apply(this, arguments)), e }; return i } } }(), function () { function t() { this.ajax = { transformToCamelCase: genius.utils.accessor(!1), parseJson: genius.utils.accessor(function (t) { return genius.config.ajax.parseJs().call(this, JSON.parse(t)) }), parseJs: genius.utils.accessor(function (t) { return t }), reset: function () { this.transformToCamelCase(!1), this.parseJson(function (t) { return genius.config.ajax.parseJs().call(this, JSON.parse(t)) }), this.parseJs(function (t) { return t }) } } } t.prototype = { reset: function (t) { this.types.reset(t), this.ajax.reset(t) } }, genius.config = new t }(), function () { function t(t, e, n) { this.singleton = function () { n[t] = genius.utils.once(e) }, this.service = function () { }, this.value = e } function e(t) { this.service = function () { return t.value = t, t }, this.singleton = function () { var e = genius.utils.once(t); return e.value = e, e }, this.value = t } function n() { } function i() { this.kernel = new s(this), this.modules = new n; this.kernel.add(this.modules.realDataModule) } function s(t) { var n = []; this.add = function (e) { if (!genius.utils.contains(n, e)) for (var s in e) genius.utils.contains(i.reservedKeywords, s) || (t[s] = e[s].value) }, this.dependency = function (t) { return new e(t) }, this.wipe = function (e) { for (var n in e) genius.utils.contains(i.reservedKeywords, n) || t[n] != e[n].value || delete t[n] }, this.reset = function () { this.wipe() } } Object.reservedKeywords = function () { var t = {}, e = []; for (var n in t) e.push(n); return e }(), n.prototype = { register: function (t, e) { this[t] = e } }, n.reservedKeywords = ["register"].concat(Object.reservedKeywords), i.prototype = { set: function (e, n) { return this[e] = n, new t(e, n, this) } }, i.reservedKeywords = ["kernel", "modules", "RouteProvider"].concat(Object.reservedKeywords), genius.box = new i }(); var t = { parse: function (t) { return t }, set: function (t, e) { return e.value = t, e.isDirty = e.current !== e.value, e.value } }, e = { parse: function (t, e) { return e.parseServerInput.call(this, t, e.constr) }, set: function (t, e) { return e.value = t, e.isDirty = !1, e.value } }, n = t; !function () { function t() { this.boolean = new e(!1, !1), this.string = new e(!1, ""), this.date = new e(!0, function () { return new Date }, { parseServerInput: function (t) { var e = /^\d{4}\-\d{2}\-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/; if ("string" == typeof t && e.test(t)) { t = genius.utils.trim(t.replace(/[^\d]/g, " ")); var n = genius.utils.map(t.split(/\s+/), parseInt); return new Date(n[0], n[1] - 1, n[2], n[3], n[4], n[5]) } return t }, toQuery: function (t) { return t.toISOString() } }), this.collection = new e(!1, function () { return new genius.Collection }), this.number = new e(!1, 0), this.dynamic = new e(!0, null), this.custom = new e(!0, null, { parseServerInput: function (t, e) { var n = new e; for (var i in t) n[i] ? n[i].isAccessor ? n[i](t[i]) : "function" != typeof n[i] && (n[i] = t[i]) : n[i] = genius.types.dynamic().getInstance().initialize(t[i]).accessor(); return n } }) } function e(t, e, n) { n = n || {}, this.nullable = genius.utils.accessor(t), this.defaultTo = genius.utils.accessor(e), this.parseServerInput = genius.utils.accessor(n.parseServerInput || l), this.toQuery = genius.utils.accessor(n.toQuery || f), this.toJs = genius.utils.accessor(n.toJs || f), this.toJson = genius.utils.accessor(n.toJson || f); var i = [this.nullable(), this.defaultTo(), this.parseServerInput(), this.toQuery(), this.toJs(), this.toJson()]; this.reset = function () { this.nullable(i[0]), this.defaultTo(i[1]), this.parseServerInput(i[2]), this.toQuery(i[3]), this.toJs(i[4]), this.toJson(i[5]) } } function i(t, e, n, i) { t = t || {}, n = n || "custom"; var s = genius.config.types[n]; this.nullable = genius.utils.cascadingGet("nullable", [t, s]), "undefined" == typeof this.nullable && (this.nullable = !0); var r = genius.utils.cascadingGet("defaultTo", [t, s]); this.defaultTo = "function" == typeof r ? r : function () { return r }, this.parseServerInput = genius.utils.cascadingGet("parseServerInput", [t, s]), this.typeName = n, this.constr = e, this.toQuery = t.toQuery || s.toQuery, this.initialize = t.initialize || function () { return l }, this.filter = i, this.value = this.defaultTo } function s(t, e, n, s) { t = new i(t, e, n, s), t.filter(t.defaultTo(), t, !0), this.getInstance = function () { return new u(genius.utils.extend({}, t)) }, this.nullable = function () { return t.nullable }, this.getDefault = t.defaultTo, this.constr = function () { return t.constr } } function r(t) { t.filter(t.value, t), t.isDirty = !1, t.current = t.value, t.changeCallbacks = {}; var e = function () { if (arguments.length && (arguments[0] = n.parse(arguments[0], t), t.filter(arguments[0], t), n.set(arguments[0], t), t.current !== t.value)) { for (var e in t.changeCallbacks) t.changeCallbacks[e].call(this, t.current, t.value); t.current = t.value } return t.value }, i = 0; return genius.utils.extend(e, { subscribe: function (e) { return t.changeCallbacks[i] = e, i++ }, unsubscribe: function (e) { delete t.changeCallbacks[e] }, toQuery: function () { return t.toQuery().call(this, t.value) }, isAccessor: !0, nullable: function () { return t.nullable }, defaultTo: t.defaultTo, isDirty: function () { return t.isDirty } }), e } function u(t) { var e = this; t.value = t.defaultTo(), this.accessor = genius.utils.once(function () { return r(t) }), this.initialize = genius.utils.once(function (i) { return i = n.parse(i, t), t.filter(i, t), t.value = t.current = i, e }) } function o(t, e, n) { if (typeof t != e.typeName && (!e.nullable && !n || !genius.utils.isNullOrUndefined(t))) throw new TypeError("Value must be of type " + e.typeName + (e.nullable ? ", null, or undefined" : "")) } function a(t, e, n) { if (!(t instanceof e.constr || (e.nullable || n) && genius.utils.isNullOrUndefined(t))) throw new TypeError("Value must be of custom type " + e.constr.name + (e.nullable ? ", null, or undefined" : "")) } function c(t, e, n) { if (!n && !e.nullable && genius.utils.isNullOrUndefined(t)) throw new TypeError("Dynamic value cannot be null or undefined") } t.permanentProperties = ["bool", "string", "date", "number", "dynamic", "custom", "add", "reset"], t.prototype = { add: function (t, n, i) { i = i || {}; { var r = genius.utils.cases.pascalToCamel(t); this[r] = new e(!0, null, i) } genius.types[r] = function () { return new s(i, n, r, a) } }, reset: function (e) { var n = e && e.hard; for (var i in this) n && !genius.utils.contains(t.permanentProperties, i) ? delete this[i] : this[i].reset && this[i].reset(); t.call(this) } }; var l = function (t) { return t }, f = function (t) { return t }; genius.config.types = new t, genius.types = function (t, e) { return new s(e, t, "custom", a) }, genius.utils.extend(genius.types, { string: function (t) { return new s(t, String, "string", o) }, "boolean": function (t) { return new s(t, Boolean, "boolean", o) }, number: function (t) { return new s(t, Number, "number", o) }, date: function (t) { return new s(t, Date, "date", a) }, collection: function (t) { return new s(t, genius.Collection, "collection", a) }, dynamic: function (t) { return new s(t, function () { }, "dynamic", c) } }) }(), function () { function i() { } var s, r = { getKey: function (t, e) { if (t = t || {}, e.uniqKey) { var n = r.drillDown.call(this, t, e.uniqKey); return n } }, getUrl: function () { }, buildPrototype: function (t, e) { for (var n in e) "function" == typeof e[n] && (t[n] = e[n]); t.url = "function" == typeof e.url ? e.url : function () { return e.url || "" } }, setVarTyping: function (t) { for (var e in t) "uniqKey" !== e && "url" !== e && (this[e] = t[e]) }, populateVar: function (t, e, n) { var i = genius.config.ajax.transformToCamelCase(); if (i) { if (genius.utils.cases.isCapitalized(t)) { var s = genius.utils.cases.pascalToCamel(t); return r.populateVar.call(this, s, e), this[t] && (this[t] = this[s]), void 0 } "object" == typeof e && (e = genius.utils.cases.camelObject(e)) } this[t] && this[t].getInstance ? (this[t] = this[t].getInstance().initialize(e).accessor(), this[t].subscribe(function () { n.isDirty = !0 })) : "function" == typeof e ? this[t] = e : this[t] && this[t].isAccessor ? this[t](e) : this[t] = genius.types.dynamic({ nullable: !0 }).getInstance().initialize(e).accessor() }, populateVars: function (t, e) { for (var n in t) r.populateVar.call(this, n, t[n], e); for (var n in this) "function" == typeof this[n].getInstance && (this[n] = this[n].getInstance().accessor(), this[n].subscribe(function () { e.isDirty = !0 })) }, drillDown: function (t, e) { for (var n = e.split("."), i = t[n[0]], s = 1; s < n.length; s++) { if (!i[n[s]]) return; i = i[n[s]].isAccessor ? i[n[s]]() : i[n[s]] } return i }, getInnerConfig: function (t, e) { return t ? (t.optionsHash = e, t) : { isDirty: !0, isNew: !0, isLoading: !1, isDeleted: !1, optionsHash: e } }, initialize: function (t) { var i = { none: {} }, s = 0, r = function (t, e) { return i[t] || (i[t] = {}), i[t][s] = e, s++ }, u = function (t) { var e; if (e = i[t]) for (var n in e) e[n].apply(this, genius.utils.toArray(arguments).slice(1)) }; genius.utils.extend(this, { subscribe: function (t, e) { switch (arguments.length) { case 1: return r("none", t); case 2: return r(t, e) } }, unsubscribe: function (t) { var e = !1; for (var n in i) if (i[n][t]) { e = !0, delete i[n][t]; break } return e }, isDirty: function () { return t.isDirty }, isNew: function () { return t.isNew }, isDeleted: function () { return t.isDeleted }, isLoading: function () { return t.isLoading }, optionsHash: function () { return t.optionsHash }, $delete: function () { function e() { for (var t in this) this[t] && this[t].isAccessor && delete this[t] } if (u("delete"), t.isNew) e.call(this), t.isDeleted = !0; else { var n = genius.box.RouteProvider().createRoute(this.url(), this, !1), i = this; t.isLoading = !0, genius.box.HttpBackend().del(n).done(function () { t.isDeleted = !0, e.call(i) }).always(function () { t.isLoading = !1 }) } return null }, $save: function () { if (t.isDeleted) throw new ReferenceError("You cannot save a deleted resource."); if (t.isDirty) { var i = genius.box.RouteProvider(), s = i.createRoute(this.url(), this, !1), r = this; t.isLoading = !0, genius.box.HttpBackend()[t.isNew ? "post" : "put"](s, this.toJson()).done(function (i) { i = genius.config.ajax.parseJson().call(this, i), n = e; for (var s in i) r[s] && r[s].isAccessor && (r[s](i[s]), r[s].isDirty(!1)); t.isDirty = t.isNew = !1 }).always(function () { t.isLoading = !1 }) } } }) } }; i.prototype = { changedProperties: function () { var t = {}; for (var e in this) this[e].isAccessor && this[e].isDirty() && (t[e] = this[e]()); return t }, properties: function () { var t = {}; for (var e in this) this[e].isAccessor && (t[e] = this[e], t[e]() instanceof i && (t[e] = t[e].properties())); return t }, toJs: function () { var t = {}; for (var e in this) this[e].toJs ? t[e] = this[e].toJs() : this[e].isAccessor && (t[e] = this[e](), t[e] instanceof i && (t[e] = t[e].toJs())); return t }, toJson: function () { return JSON.stringify(this.toJs()) } }, i.extend = function (i) { function u(t) { function e() { r.setVarTyping.call(this, i), r.populateVars.call(this, t, r.getInnerConfig(c, t)); var e; if (e = r.getKey(t, i)) { var n = a[e]; if (n) return r.populateVars.call(n, t), n; a[e] = this } } return s ? void 0 : ("function" == typeof this.init && this.init.apply(this, arguments), r.initialize.call(this, r.getInnerConfig(c, t), t), e.prototype = this, new e) } if (i.uniqKey && (field = i[i.uniqKey])) { if (!field.nullable()) throw new TypeError("Unique keys must be nullable"); if (!genius.utils.isNullOrUndefined(field.getDefault())) throw new TypeError("Unique keys must default to undefined or null") } s = !0; var o = new this; s = !1, r.buildPrototype(o, i); var a = {}, c = null; return genius.utils.extend(u, { extend: arguments.callee, prototype: o, $get: function (s) { var u = genius.box.HttpBackend(), o = genius.box.RouteProvider().createRoute(this.prototype.url(), s); c = { isNew: !1, isDirty: !1, isLoading: !0, isDeleted: !1 }; var a = c, l = new this(s); return c = null, l.$promise = u.get(o).done(function (s) { var u = genius.config.ajax.parseJson().call(this, s); i.parseServerInput && (u = i.parseServerInput(u)), n = e, r.populateVars.call(l, u, a), n = t, a.isDirty = !1 }).always(function () { a.isLoading = !1 }), l }, $query: function (i) { i = i || {}; var s = genius.Collection.extend({ type: genius.types(u) }), r = new s, o = genius.box.HttpBackend(), a = genius.box.RouteProvider().createRoute(this.prototype.url(), i); return r.$promise = o.get(a).done(function (i) { var s = genius.config.ajax.parseJson().call(this, i); c = { isNew: !1, isDirty: !1, isLoading: !1, isDeleted: !1 }, n = e, r.concat(s), n = t, c = null, r.isLoading(!1) }), r } }), u }, genius.Resource = i }(), function () { function t(t) { t = t || {}, this.push = function (e) { if (t.type && (e = t.type.getInstance().initialize(e).accessor().call()), t.unique && genius.utils.contains(this, e)) return this.length; var n = t.unique && genius.utils.contains(this, e) ? this.length : Array.prototype.push.call(this, e); return n }, this.concat = function (e) { return t.type && (e = genius.utils.map(e, function (e) { return t.type.getInstance().initialize(e).accessor().call() })), Array.prototype.push.apply(this, e) }, this.removeAll = function () { this.splice(0) }, this.remove = function (t) { for (var e; -1 !== (e = genius.utils.indexOf(this, t)) ;) this.splice(e, 1) } } t.prototype = []; var e = !1; t.extend = function (t) { function n(t) { if (!e) { t = t || {}, "function" == typeof this.init && this.init.apply(this, arguments), t.type && (s = t.type), t.unique && (r = t.unique), this.isLoading = genius.utils.accessor(!0), this.type = function () { return s }, this.isDirty = genius.utils.accessor(!1); var n = {}, i = 0; this.subscribe = function (t) { return n[i] = t, i++ }, this.fire = function () { } } } t = t || {}, e = !0; var i = new this; e = !1; var s = t.type, r = t.unique; i.toJs = function () { return genius.utils.map(this, function (t) { return t.toJs ? t.toJs() : t }).slice(0, this.length) }, i.initialize = function (t) { return markDirty = !1, this.concat(t), markDirty = !0, this }, i.accessor = function () { var t = this, e = function () { return arguments.length && (t.removeAll(), t.concat(arguments[0]), t.isDirty(!0)), t }; return e.isAccessor = !0, e.subscribe = this.subscribe, e.isDirty = this.isDirty, e.toJs = this.toJs.bind(this), e }, i.push = function (t) { if (s && (t = s.getInstance().initialize(t).accessor().call()), r && genius.utils.contains(this, t)) return this.length; if (t instanceof genius.Resource) { var e = this; t.subscribe("delete", function () { e.remove(t) }) } var n = r && genius.utils.contains(this, t) ? this.length : Array.prototype.push.call(this, t); return n }, (concat = Array.prototype.concat) && (i.concat = function (t) { return s && (t = genius.utils.map(t, function (t) { if (t = s.getInstance().initialize(t).accessor().call(), t instanceof genius.Resource) { var e = this; t.subscribe("delete", function () { e.remove(t) }) } return t })), Array.prototype.push.apply(this, t) }); for (var u in t) "function" == typeof t[u] && "type" !== u && (i[u] = t[u]); return n.prototype = i, n.extend = arguments.callee, n }, genius.Collection = t }(), function () { function t() { function t() { this.done = function (t) { if ("function" == typeof t) { if ("resolved" == r) return t.apply(this, arguments), this; n.push(t) } return this }, this.fail = function (t) { if ("function" == typeof t) { if ("rejected" == r) return t.apply(this, arguments), this; i.push(t) } return this }, this.always = function (t) { if ("function" == typeof t) { if ("pending" !== r) return t.apply(this, arguments), this; s.push(t) } return this }, this.state = function () { return r } } function e(t, e) { for (var n = 0; n < t.length; n++) t[n].apply(this, e); for (var n = 0; n < s.length; n++) s[n].apply(this, e) } var n = [], i = [], s = [], r = "pending"; this.resolve = function () { r = "resolved", e.call(this, n, arguments) }, this.reject = function () { r = "rejected", e.call(this, i, arguments) }; var u = new t; this.promise = function () { return u } } t.prototype = { done: function () { return this.promise().done.apply(this, arguments) }, fail: function () { return this.promise().fail.apply(this, arguments) }, always: function () { return this.promise().always.apply(this, arguments) } }, genius.deferred = function () { return new t } }(), function () { function t(t, e, n) { this.toReturn = function (i) { t.expectations[e + "-" + n] = i } } function e() { this.expectations = {}, this.pendingRequests = {} } e.prototype = function () { function e(t, e) { if (!this.expectations[t + "-" + e]) throw new ReferenceError("Unexpected request for " + e); var n = genius.deferred(); return this.pendingRequests[t + "-" + e] = n, n.promise() } return { get: function (t) { return e.call(this, "get", t) }, put: function (t) { return e.call(this, "put", t) }, post: function (t) { return e.call(this, "post", t) }, flush: function () { for (var t in this.pendingRequests) this.pendingRequests[t].resolve(this.expectations[t]), delete this.pendingRequests[t] }, expectGet: function (e) { return new t(this, "get", e) }, expectPost: function (e) { return new t(this, "post", e) }, expectPut: function (e) { return new t(this, "put", e) }, expectDelete: function (e) { return new t(this, "delete", e) } } }(), genius.box.set("FakeHttpBackend", function () { return new e }).singleton() }(), function () { function t() { } function e(t, e, n) { var i = genius.deferred(), s = genius.box.XHR(); return s.open(e, t, !0), s.setRequestHeader("Accepts", "application/json"), s.setRequestHeader("Content-type", "application/json"), s.onreadystatechange = function () { 4 == s.readyState && 200 == s.status && i.resolve(s.responseText) }, s.send(n), i.promise() } t.prototype = { get: function (t) { return e(t, "GET") }, put: function (t, n) { return e(t, "PUT", n) }, post: function (t, n) { return e(t, "POST", n) }, del: function (t, n) { return e(t, "DELETE", n) } }, genius.box.set("RealHttpBackend", function () { return new t }) }(), function () { function t(t) { var e = !1, n = this, i = function () { t.call().always(function () { e && setTimeout(i, n.buffer()) }) }; this.start = function () { e || (e = !0, i()) }, this.stop = function () { e = !1 }, this.buffer = genius.utils.accessor(0) } genius.box.set("AsyncQueue", function () { return new t }).service() }(), function () { function t(t) { var e = []; for (var n in t) e.push(n + "=" + (t[n].toQuery ? t[n].toQuery() : t[n])); return e.length ? "?" + e.join("&") : "" } function e() { } e.prototype = { createRoute: function (e, n, i) { for (var s, r = /\:([^\/\.\-]+)/gi, u = e, o = []; s = r.exec(e) ;) { var a, c = s[1]; a = n[c] ? n[c].isAccessor && n[c]() ? n[c]() : "function" != typeof n[c] ? n[c] : "" : "", u = u.replace(s[0], a), o.push(s[1]) } return /\/$/.test(u) && (u = u.substr(0, u.length - 1)), i !== !1 && (u += t(genius.utils.except(n instanceof genius.Resource ? n.properties() : n, o))), u } }, genius.box.set("RouteProvider", function () { return new e }).singleton() }(), function () { window.XMLHttpRequest ? genius.box.set("XHR", function () { return new XMLHttpRequest }) : window.ActiveXObject && genius.box.set("XHR", function () { return new ActiveXObject("Microsoft.XMLHTTP") }) }(), function () { genius.box.modules.register("realDataModule", { HttpBackend: genius.box.kernel.dependency(genius.box.RealHttpBackend) }), genius.box.modules.register("testDataModule", { HttpBackend: genius.box.kernel.dependency(genius.box.FakeHttpBackend) }), genius.box.kernel.add(genius.box.modules.realDataModule) }() }();